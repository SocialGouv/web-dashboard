{"version":3,"sources":["utils.ts","components/Grade.tsx","components/Dashboard.tsx","components/Gauge.tsx","components/Panel.tsx","components/LightHouse.tsx","components/SSL.tsx","components/HTTP.tsx","components/Trackers.tsx","components/Owasp.tsx","components/Nuclei.tsx","components/Sidebar.tsx","App.tsx","index.tsx"],"names":["smallUrl","url","toLowerCase","replace","Grade","grade","label","newGrade","substring","toUpperCase","variant","Badge","style","fontSize","undefined","scoreToGrade","score","x1","x2","grades","split","Math","min","length","floor","Dashboard","report","console","log","Alert","size","Table","striped","bordered","hover","className","Object","keys","map","key","a11y","lhr","result","categories","accessibility","webPerf","performance","seo","ssl","endpoints","http","owaspAlerts","owasp","site","alerts","filter","a","riskcode","trackers","trackersGrade","cookies","cookiesGrade","nuclei","n","info","severity","nucleiGrade","owaspMax","max","o","parseInt","owaspGrade","to","toFixed","href","target","Gauge","props","canvas","useRef","span","gauge","useEffect","current","donut","Donut","CanvasGauge","setTextField","setOptions","options","maxValue","setMinValue","minValue","animationSpeed","set","value","textChangeHandler","passThroughProps","ref","display","defaultProps","percentColors","angle","lineWidth","radiusScale","pointer","strokeWidth","color","strokeColor","generateGradient","highDpiSupport","Panel","title","children","Card","Title","background","padding","fontWeight","marginLeft","float","Body","LightHouse","data","filename","row","Row","i","category","Col","xs","md","lg","width","height","SSL","endpoint","host","statusMessage","hasWarnings","ipAddress","HttpRowBadge","abs","score_modifier","HTTP","failures","details","pass","sort","b","failure","name","score_description","Trackers","flatMap","marginBottom","colSpan","cookie","domain","httpOnly","secure","templateID","tracker","type","orderBySeverity","order","confidence","OwaspBadge","riskdesc","Owasp","alert","count","NucleiBadge","nucleiSeverities","nucleiOrder","indexOf","Nuclei","rows","matcher_name","Sidebar","urls","Nav","activeClassName","exact","marginTop","marginRight","whiteSpace","TopBar","Navbar","bg","sticky","expand","UrlDetail","useParams","urlData","App","basename","process","Container","fluid","role","path","ReactDOM","document","getElementById"],"mappings":"smnmfAAaA,EAAW,SAACC,GAAD,OACtBA,EACGC,cACAC,QAAQ,uBAAwB,IAChCA,QAAQ,MAAO,K,eCEPC,EAA8B,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC7CC,EAAWF,EAAMG,UAAU,EAAG,GAAGC,cACjCC,EACS,MAAbH,GAEiB,MAAbA,EADA,SAGa,MAAbA,EACA,UACa,MAAbA,GAEa,MAAbA,EADA,OAGA,UACN,OACE,cAACI,EAAA,EAAD,CAAOD,QAASA,EAASE,MAAO,CAAEC,SAAU,OAA5C,cACaC,IAAVR,EAAsBA,EAAQD,KCP/BU,EAAe,SAACC,GACpB,IAJ4BC,EAAwBC,EAI9CC,EAAS,cAAcC,MAAM,KAOnC,OAAOD,EALUE,KAAKC,IACpBH,EAAOI,OAAS,EAChBF,KAAKG,OAAYR,GARSC,EAQF,KAAS,GARiBC,EAQpB,KAAH,EAPMD,GAAMC,MAa9BO,EAAsC,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAGpD,OAFAC,QAAQC,IAAI,SAAUF,GAGpB,gCACE,uBACA,eAACG,EAAA,EAAD,CAAOnB,QAAQ,OAAf,wEAC2D,IACzD,cAAC,IAAD,CAAcoB,KAAM,KAFtB,8CAIA,uBACA,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,qCACA,oBAAIC,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,iBACA,oBAAIA,UAAU,cAAd,iBACA,oBAAIA,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,mBACA,oBAAIA,UAAU,cAAd,sBACA,oBAAIA,UAAU,cAAd,qBACA,oBAAIA,UAAU,cAAd,yBAGJ,gCACGC,OAAOC,KAAKX,GAAQY,KAAI,SAACC,GACxB,IAAMC,EACJd,EAAOa,GAAKE,IAAIlB,QACfG,EAAOa,GAAKE,IAAI,GAAGC,OAAOC,WAAWC,cACnC5B,MACC6B,EACJnB,EAAOa,GAAKE,IAAIlB,QACfG,EAAOa,GAAKE,IAAI,GAAGC,OAAOC,WAAWG,YACnC9B,MACC+B,EACJrB,EAAOa,GAAKE,IAAIlB,QACfG,EAAOa,GAAKE,IAAI,GAAGC,OAAOC,WAAWI,IAAI/B,MACtCgC,EACJtB,EAAOa,GAAKS,IAAIzB,QAChBG,EAAOa,GAAKS,IAAI,GAAGN,OAAOO,WAC1BvB,EAAOa,GAAKS,IAAI,GAAGN,OAAOO,UAAU1B,QACpCG,EAAOa,GAAKS,IAAI,GAAGN,OAAOO,UAAU,GAAG5C,MACnC6C,EACJxB,EAAOa,GAAKW,KAAK3B,QAAUG,EAAOa,GAAKW,KAAK,GAAGR,OAAOrC,MAClD8C,EACHzB,EAAOa,GAAKa,MAAM7B,QACjBG,EAAOa,GAAKa,MAAM,GAAGV,OAAOW,KAAK,GAAGC,OAAOC,QACzC,SAACC,GAAD,MAA2B,MAAfA,EAAEC,aAElB,GACIL,EAAQD,EAAY5B,OACpBmC,EACHhC,EAAOa,GAAKmB,UACXhC,EAAOa,GAAKmB,SAASnC,QACrBG,EAAOa,GAAKmB,SAAS,GAAGA,SAASnC,QACnC,EACIoC,EACJD,EAAW,GACP,IACAA,EAAW,EACX,IACAA,EAAW,EACX,IACA,IACAE,EACHlC,EAAOa,GAAKmB,UACXhC,EAAOa,GAAKmB,SAASnC,QACrBG,EAAOa,GAAKmB,SAAS,GAAGE,QAAQrC,QAClC,EACIsC,EACJD,EAAU,GACN,IACAA,EAAU,EACV,IACAA,EAAU,EACV,IACAA,EAAU,EACV,IACA,IACAE,EAASpC,EAAOa,GAAKuB,OAAOP,QAChC,SAACQ,GAAD,MAAgC,SAApBA,EAAEC,KAAKC,YACnB1C,OACI2C,EAAcxC,EAAOa,GAAKuB,OAAOP,QACrC,SAACQ,GAAD,MACsB,aAApBA,EAAEC,KAAKC,UAA+C,SAApBF,EAAEC,KAAKC,YAC3C1C,OACE,IACAuC,EAAOvC,OACP,IACA,IACE4C,EAAW9C,KAAK+C,IAAL,MAAA/C,KAAI,YAChB8B,EAAYb,KAAI,SAAC+B,GAAD,OAAYC,SAASD,EAAEZ,WAAa,OAGnDc,EACJJ,EAAW,EACP,IACAA,EAAW,EACX,IACAA,EAAW,EACX,IACAA,EAAW,EACX,IACA,IACN,OACE,+BACE,6BACE,cAAC,IAAD,CAAMK,GAAE,eAAUjC,GAAlB,SAA0BvC,EAASuC,OAErC,oBAAIJ,UAAU,cAAd,SACE,cAAC,EAAD,CACE9B,MAAOU,EAAa,EAAIyB,GACxBlC,OAAe,IAAPkC,GAAYiC,UAAY,SAGpC,oBAAItC,UAAU,cAAd,SACE,cAAC,EAAD,CACE9B,MAAOU,EAAa,EAAI8B,GACxBvC,OAAkB,IAAVuC,GAAe4B,UAAY,SAGvC,oBAAItC,UAAU,cAAd,SACE,cAAC,EAAD,CACE9B,MAAOU,EAAa,EAAIgC,GACxBzC,OAAc,IAANyC,GAAW0B,UAAY,SAGnC,oBAAItC,UAAU,cAAd,SACGa,EAAM,cAAC,EAAD,CAAO3C,MAAO2C,IAAU,cAAC,EAAD,CAAO3C,MAAM,IAAIC,MAAM,QAExD,oBAAI6B,UAAU,cAAd,SACGe,EACC,cAAC,EAAD,CAAO7C,MAAO6C,IAEd,cAAC,EAAD,CAAO7C,MAAM,IAAIC,MAAM,QAG3B,oBAAI6B,UAAU,cAAd,SACE,cAAC,EAAD,CAAO9B,MAAOkE,EAAYjE,MAAO8C,MAEnC,oBAAIjB,UAAU,cAAd,SACE,cAAC,EAAD,CAAO9B,MAAOsD,EAAerD,MAAOoD,MAEtC,oBAAIvB,UAAU,cAAd,SACE,cAAC,EAAD,CAAO9B,MAAOwD,EAAcvD,MAAOsD,MAErC,oBAAIzB,UAAU,cAAd,SACE,cAAC,EAAD,CAAO9B,MAAO6D,EAAa5D,MAAOwD,QA1C7BvB,WAiDjB,uBACA,uBACA,6CACA,6GAIA,eAACR,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,sCACA,4CAGJ,kCACE,+BACE,6BACE,mBACEwC,KAAK,qDACLC,OAAO,SAFT,iCAOF,2FAEF,+BACE,6BACE,mBAAGD,KAAK,2BAA2BC,OAAO,SAA1C,wBAIF,iHAKF,+BACE,6BACE,mBAAGD,KAAK,2BAA2BC,OAAO,SAA1C,uBAIF,uEAEF,+BACE,6BACE,mBAAGD,KAAK,mCAAmCC,OAAO,SAAlD,wCAIF,2EAEF,+BACE,0CACA,uEAEF,+BACE,6BACE,mBAAGD,KAAK,sCAAsCC,OAAO,SAArD,sBAIF,4E,wCC9NCC,EAA8B,SAACC,GAC1C,IAAMC,EAASC,mBACTC,EAAOD,mBACPE,EAAQF,mBAEdG,qBAAU,WACRD,EAAME,QAAUN,EAAMO,MAClB,IAAIC,QAAMP,EAAOK,SACjB,IAAIG,QAAYR,EAAOK,SAC3BF,EAAME,QAAQI,aAAaP,EAAKG,SAChCF,EAAME,QAAQK,WAAWX,EAAMY,SAC/BR,EAAME,QAAQO,SAAWb,EAAMa,SAC/BT,EAAME,QAAQQ,YAAYd,EAAMe,UAChCX,EAAME,QAAQU,eAAiBhB,EAAMgB,eACrCZ,EAAME,QAAQW,IAAIjB,EAAMkB,SACvB,CAAClB,EAAMO,QAEVF,qBAAU,WACRD,EAAME,QAAQK,WAAWX,EAAMY,WAC9B,CAACZ,EAAMY,UAEVP,qBAAU,WACRD,EAAME,QAAQO,SAAWb,EAAMa,WAC9B,CAACb,EAAMa,WAEVR,qBAAU,WACRD,EAAME,QAAQQ,YAAYd,EAAMe,YAC/B,CAACf,EAAMe,WAEVV,qBAAU,WACRD,EAAME,QAAQU,eAAiBhB,EAAMgB,iBACpC,CAAChB,EAAMgB,iBAEVX,qBAAU,WACRD,EAAME,QAAQW,IAAIjB,EAAMkB,SACvB,CAAClB,EAAMkB,QAYNlB,EARFa,SAQEb,EAPFe,SAOEf,EANFgB,eAMEhB,EALFY,QAKEZ,EAJFO,MAIEP,EAHFkB,MAGElB,EAFFmB,kBA7CkD,IA8C/CC,EA9C+C,YA+ChDpB,EA/CgD,wFAkDpD,OACE,qCACE,oCACEqB,IAAKpB,EACL3C,UAAU,gBACN8D,IAEN,sBAAMC,IAAKlB,EAAMpE,MAAO,CAAEuF,QAAS,cAKzCvB,EAAMwB,aAAe,CACnBV,SAAU,IACVE,SAAU,EACVC,eAAgB,GAChBJ,QAAS,CAOPY,cAAe,CACb,CAAC,EAAK,WACN,CAAC,GAAK,WACN,CAAC,GAAK,WAIN,CAAC,EAAG,YAENC,MAAO,IACPC,UAAW,IACXC,YAAa,EACbC,QAAS,CACPlF,OAAQ,GACRmF,YAAa,KACbC,MAAO,QAMTC,YAAa,UACbC,kBAAkB,EAClBC,gBAAgB,GAElB1B,OAAO,EACPY,kBAAmB,cAGNpB,ICjHFmC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUjD,EAApB,EAAoBA,KAAM/D,EAA1B,EAA0BA,IAA1B,OACzC,eAACiH,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAYvG,MAAO,CAAEwG,WAAY,UAAWT,MAAO,QAASU,QAAS,IAArE,UACGL,EACAhD,GACC,sBACEpD,MAAO,CAAE0G,WAAY,SAAUzG,SAAU,QAAS0G,WAAY,IADhE,SAGGvD,IAGJ/D,GACC,mBACEW,MAAO,CAAE+F,MAAO,QAASa,MAAO,SAChC9C,KAAMzE,EACN0E,OAAO,SAHT,SAKE,cAAC,IAAD,SAIN,cAACuC,EAAA,EAAKO,KAAN,UAAYR,QCnBHS,EAAwC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChD1H,EACH0H,EAAKpG,QAAL,gCAC0BoG,EAAK,GAAGC,SAASzH,QACxC,UACA,WAEJ,KAEF,OACEF,GACE,cAAC,EAAD,CACE+G,MAAM,aACNhD,KAAK,2DACL/D,IAAKA,EAHP,SAKG0H,EAAKrF,KAAI,SAACuF,GACT,OACE,cAACC,EAAA,EAAD,UACG1F,OAAOC,KAAKwF,EAAInF,OAAOC,YACrBY,QAAO,SAAChB,GAAD,MAAiB,QAARA,KAChBD,KAAI,SAACC,EAAUwF,GACd,IAAMC,EAAWH,EAAInF,OAAOC,WAAWJ,GACvC,OACE,cAAC0F,EAAA,EAAD,CAEEC,GAAI,GACJC,GAAI,EACJC,GAAI,EACJjG,UAAU,mBALZ,SAOE,eAAC+E,EAAA,EAAD,WACE,cAAC,EAAD,CACEmB,MAAO,IACPC,OAAQ,GACRvC,MAAwB,IAAjBiC,EAAShH,MAChB4E,SAAU,EACVF,SAAU,IACVG,eAAgB,KAElB,eAACqB,EAAA,EAAKO,KAAN,WACE,cAACP,EAAA,EAAKC,MAAN,UAAaa,EAAShB,QACtB,cAACE,EAAA,EAAKC,MAAN,CACEvG,MAAO,CAAEC,SAAU,OAAQyG,WAAY,QADzC,SAGGU,EAAShH,eApBXgH,EAAShB,WAPda,EAAI5H,WCvBbsI,EAA0B,SAAC,GAAc,IAAZZ,EAAW,EAAXA,KAMlC1H,GAJJ0H,EAAKpG,QACLoG,EAAK,GAAGjF,OAAOO,WACf0E,EAAK,GAAGjF,OAAOO,UAAU1B,QACzBoG,EAAK,GAAGjF,OAAOO,UAAU,GAAG5C,MAE3BsH,EAAKpG,QACJoG,EAAK,GAAGjF,OAAOO,WADhB,yDAEmD0E,EAAK,GAAG1H,MAC5D,MACF,OACEA,GACE,cAAC,EAAD,CAAO+G,MAAM,MAAMhD,KAAK,yCAAsC/D,IAAKA,EAAnE,SACG0H,EAAKrF,KAAI,SAACuF,GACT,OACE,cAAC,WAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACG,EAAA,EAAD,UACGJ,EAAInF,OAAOO,UAAUX,KAAI,SAACkG,EAAeT,GACxC,OACE,gCACGS,EAASC,KACV,6BAC+B,UAA3BD,EAASE,eACT,gCACE,cAAC,EAAD,CAAOrI,MAAOmI,EAASnI,QACvB,uBACA,uBACCmI,EAASG,aACR,2DAEF,uBAPF,OAQOH,EAASI,cAGhB,cAAC/G,EAAA,EAAD,CAAOnB,QAAQ,SAAf,SACG8H,EAASE,oBAhBRF,EAASC,KAAOV,WALfF,EAAI5H,WChB/B4I,EAAe,SAAChB,GACpB,IAAM5D,EAAW5C,KAAKyH,IAAIjB,EAAIkB,gBACxBrI,EACJuD,EAAW,IAEPA,EAAW,GADX,SAGAA,EAAW,GACX,UACAA,EAAW,GACX,OACA,UACN,OACE,cAACtD,EAAA,EAAD,CAAOwB,UAAU,QAAQzB,QAASA,EAAlC,SACGuD,KAKM+E,EAA4B,SAAC,GAAc,IAAZrB,EAAW,EAAXA,KACpC1H,EACH0H,EAAKpG,QAAL,kDAA0DoG,EAAK,GAAG1H,MACnE,KACF,OACEA,GACE,cAAC,EAAD,CACE+G,MAAM,OACNhD,KAAK,6DACL/D,IAAKA,EAHP,SAKG0H,EAAKrF,KAAI,SAACuF,GACT,IAAMoB,EAAW7G,OAAOC,KAAKwF,EAAInF,OAAOwG,SACrC3F,QAAO,SAAChB,GAAD,OAAUsF,EAAInF,OAAOwG,QAAQ3G,GAAK4G,QACzC7G,KAAI,SAACC,GAAD,OAASsF,EAAInF,OAAOwG,QAAQ3G,MAEnC,OADA0G,EAASG,MAAK,SAAC5F,EAAG6F,GAAJ,OAAU7F,EAAEuF,eAAiBM,EAAEN,kBAE3C,gCACE,cAAC,EAAD,CAAO1I,MAAOwH,EAAInF,OAAOrC,QACzB,uBACA,uBACA,eAAC0B,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,oCACA,wCACA,kDAGJ,gCACG+G,EAAS3G,KAAI,SAACgH,EAASvB,GAAV,OACZ,+BACE,6BAAKuB,EAAQC,OACb,6BACE,cAAC,EAAD,eAAkBD,MAEpB,6BAAKA,EAAQE,sBALNF,EAAQC,KAAOxB,aAdtBF,EAAI5H,WCrCbwJ,EAAoC,SAAC,GAAc,IAAZ9B,EAAW,EAAXA,KAKlD,OADEA,EAAK+B,SAAQ,SAAC7B,GAAD,4BAAkBA,EAAIjE,SAAtB,YAAkCiE,EAAInE,cAAWnC,OAAS,GAGrE,cAAC,EAAD,CAAOyF,MAAM,WAAWhD,KAAK,8CAA7B,SACG2D,EAAKrF,KAAI,SAACuF,EAAUE,GACnB,OACE,gCACIF,EAAIjE,SAAWiE,EAAIjE,QAAQrC,QAC3B,eAACQ,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACtB,MAAO,CAAE+I,aAAc,IAArD,UACE,kCACE,6BACE,oBAAIxH,UAAU,qBAAqByH,QAAS,EAA5C,uBAIF,+BACE,sCACA,wCACA,oBAAIzH,UAAU,cAAd,sBACA,oBAAIA,UAAU,cAAd,0BAGJ,gCACG0F,EAAIjE,QAAQtB,KAAI,SAACuH,EAAa9B,GAC7B,OACE,+BACE,6BAAK8B,EAAON,OACZ,6BAAKM,EAAOC,SACZ,oBAAI3H,UAAU,cAAd,SACG0H,EAAOE,SAAW,eAAO,WAE5B,oBAAI5H,UAAU,cAAd,SACG0H,EAAOG,OAAS,eAAO,aAPnBH,EAAOI,WAAa,GAAKlC,YAe1C,KACAF,EAAInE,UAAYmE,EAAInE,SAASnC,QAC7B,eAACQ,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,kCACE,6BACE,oBAAIC,UAAU,qBAAqByH,QAAS,EAA5C,wCAIF,+BACE,sCACA,6CAGJ,gCACG/B,EAAInE,SAASpB,KAAI,SAAC4H,EAAcnC,GAC/B,OACE,+BACE,6BAAKmC,EAAQC,OACb,6BAAKD,EAAQnE,UAFNmE,EAAQnE,MAAQgC,YASjC,OA5DMF,EAAI5H,IAAM8H,SAkE1B,cAAC,EAAD,CAAOf,MAAM,WAAWhD,KAAK,8CAA7B,SACE,cAACnC,EAAA,EAAD,CAAOnB,QAAQ,UAAf,oDC/EF0J,EAAkB,SAAC5G,EAAQ6F,GAE/B,IAAMgB,EAAQ/F,SAAS+E,EAAE5F,UAAYa,SAASd,EAAEC,UAChD,OAAc,IAAV4G,EAEK/F,SAAS+E,EAAEiB,YAAchG,SAASd,EAAE8G,YAEtCD,GAGHE,EAAa,SAAC1C,GAClB,IAAM5D,EAAW4D,EAAIpE,SACf/C,EACS,MAAbuD,EACI,OACa,MAAbA,EACA,UACa,MAAbA,GAEa,MAAbA,EADA,SAGA,OACN,OACE,cAACtD,EAAA,EAAD,CAAOwB,UAAU,QAAQzB,QAASA,EAAlC,SACGmH,EAAI2C,YAOEC,EAA8B,SAAC,GAAc,IAAZ9C,EAAW,EAAXA,KACtCrE,EAASqE,EAAK+B,SAAQ,SAAC7B,GAC3B,OAAOA,EAAInF,QAAUmF,EAAInF,OAAOW,KAAKqG,SAAQ,SAACrG,GAAD,OAAeA,EAAKC,aAEnEA,EAAO8F,KAAKgB,GACZ,IAAMnK,EACJ0H,EAAKpG,QAAL,gCACyBoG,EAAK,GAAGC,SAASzH,QAAQ,UAAW,UAC/D,OACGmD,EAAO/B,QACN,cAAC,EAAD,CACEyF,MAAM,QACN/G,IAAKA,EACL+D,KAAK,6CAHP,SAKE,eAACjC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,sCACA,oBAAIC,UAAU,cAAd,mBACA,oBAAIA,UAAU,cAAd,kCAGJ,gCACGmB,EAAOhB,KAAI,SAACoI,GACX,OACE,+BACE,6BAAKA,EAAMnB,OACX,oBAAIpH,UAAU,cAAd,SAA6BuI,EAAMC,QACnC,oBAAIxI,UAAU,cAAd,SACE,cAAC,EAAD,eAAgBuI,QAJXA,EAAMnB,iBAa3B,MCnEEqB,EAAc,SAAC/C,GACnB,IAAM5D,EAAY4D,EAAI7D,MAAQ6D,EAAI7D,KAAKC,UAAa,WAC9CvD,EACS,aAAbuD,GAEiB,SAAbA,EADA,SAGa,WAAbA,EACA,UACa,QAAbA,EACA,OACA,UACN,OACE,cAACtD,EAAA,EAAD,CAAOwB,UAAU,QAAQzB,QAASA,EAAlC,SACGuD,KAKD4G,EAAmB,gCAAgCzJ,MAAM,KAEzD0J,EAAc,SAACtH,EAAQ6F,GAC3B,OACEwB,EAAiBE,QAAQvH,EAAEQ,KAAKC,UAChC4G,EAAiBE,QAAQ1B,EAAErF,KAAKC,WAIvB+G,EAAgC,SAAC,GAAc,IACpDC,EADmD,EAAXtD,KAG9C,OADAsD,EAAK7B,KAAK0B,GAEPG,EAAK1J,QACJ,cAAC,EAAD,CACEyF,MAAM,SACNhD,KAAK,kEAFP,SAIE,eAACjC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,oCACA,0CACA,sCACA,8CAGJ,gCACG+I,EAAK3I,KAAI,SAACgH,EAAcvB,GACvB,OACE,+BACE,6BAAKuB,EAAQW,aACb,6BACE,cAAC,EAAD,eAAiBX,MAEnB,6BAAKA,EAAQtF,KAAKuF,OAClB,6BAAKD,EAAQ4B,iBANN5B,EAAQW,WAAalC,cAc1C,M,wBC5DSoD,EAAkC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChD,OACE,cAACC,EAAA,EAAD,CAAKlJ,UAAU,yDAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,oBAAIA,UAAU,kBAAd,SACE,oBAAIA,UAAU,WAAd,SACE,eAAC,IAAD,CACEqC,GAAG,IACHrC,UAAU,WACVmJ,gBAAgB,SAChBC,OAAO,EAJT,UAME,cAAC,IAAD,CAAMzJ,KAAM,GAAIlB,MAAO,CAAE4K,WAAY,EAAGC,YAAa,KANvD,yBAYJ,oBAAItJ,UAAU,8FAAd,SACE,0CAGF,oBAAIA,UAAU,kBAAd,SACGiJ,EAAK9I,KAAI,SAACrC,GAAD,OACR,oBACEkC,UAAU,WAEVvB,MAAO,CACL8K,WAAY,OAJhB,SAOE,eAAC,IAAD,CACEvJ,UAAU,WACVqC,GAAE,eAAUvE,GACZqL,gBAAgB,SAChBC,OAAO,EAJT,UAME,cAAC,IAAD,CAAQzJ,KAAM,GAAIlB,MAAO,CAAE4K,WAAY,EAAGC,YAAa,KACtDzL,EAASC,OAZPA,cCEb0L,EAAS,kBACb,cAACC,EAAA,EAAD,CACElL,QAAQ,OACRmL,GAAG,OACHC,OAAO,MACPC,OAAO,KACP5J,UAAU,4BALZ,SAOE,cAAC,IAAD,CAAMqC,GAAG,IAAT,SACE,sBACErC,UAAU,OACVvB,MAAO,CAAE0H,OAAQ,GAAIzH,SAAU,SAAU8F,MAAO,gBAFlD,UAIE,cAAC,IAAD,CAAO7E,KAAM,GAAIlB,MAAO,CAAE4K,WAAY,EAAGC,YAAa,MAJxD,2BAsBAO,EAAsC,SAAC,GAAiB,oBAAC,IACrD/L,EAAQgM,cAARhM,IAEFiM,EAAUxK,EAAOzB,GACvB,OACE,gCACE,oBAAIkC,UAAU,cAAd,SACE,mBAAGuC,KAAI,kBAAazE,GAAO0E,OAAO,SAAlC,SACG1E,MAGL,cAAC,EAAD,CAAY0H,KAAMuE,EAAQzJ,MAC1B,uBACA,cAAC,EAAD,CAAKkF,KAAMuE,EAAQlJ,MACnB,uBACA,cAAC,EAAD,CAAM2E,KAAMuE,EAAQhJ,OACpB,uBACA,cAAC,EAAD,CAAQyE,KAAMuE,EAAQpI,SACtB,uBACA,cAAC,EAAD,CAAU6D,KAAMuE,EAAQxI,WACxB,uBACA,cAAC,EAAD,CAAOiE,KAAMuE,EAAQ9I,YA+BZ+I,EA1BH,WACV,IAAMf,EAAOhJ,OAAOC,KAAKX,GACzB,OACE,cAAC,IAAD,CAAQ0K,SAAUC,iBAAlB,SACE,gCACE,cAAC,EAAD,IACA,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,eAACzE,EAAA,EAAD,WACE,cAAC,EAAD,CAASsD,KAAMA,IACf,sBAAMoB,KAAK,OAAOrK,UAAU,wCAA5B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsK,KAAK,aAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,CAAW/K,OAAQA,sBCxGrCgL,SACE,cAAC,aAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.579bec73.chunk.js","sourcesContent":["export const smallUrl = (url: string) =>\n  url\n    .toLowerCase()\n    .replace(/^https?:\\/\\/(www\\.)?/, \"\")\n    .replace(/\\/$/, \"\");\n","import * as React from \"react\";\n\nimport { Badge } from \"react-bootstrap\";\n\ntype GradeProps = { grade: string; label?: string };\n\nexport const Grade: React.FC<GradeProps> = ({ grade, label }) => {\n  const newGrade = grade.substring(0, 1).toUpperCase();\n  const variant =\n    newGrade === \"F\"\n      ? \"danger\"\n      : newGrade === \"E\"\n      ? \"danger\"\n      : newGrade === \"D\"\n      ? \"warning\"\n      : newGrade === \"C\"\n      ? \"info\"\n      : newGrade === \"B\"\n      ? \"info\"\n      : \"success\";\n  return (\n    <Badge variant={variant} style={{ fontSize: \"2em\" }}>\n      {label !== undefined ? label : grade}\n    </Badge>\n  );\n};\n","import * as React from \"react\";\n\nimport { Alert, Nav, Table, Badge } from \"react-bootstrap\";\nimport { ExternalLink } from \"react-feather\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nimport { smallUrl } from \"../utils\";\n\nimport { Grade } from \"./Grade\";\n\ntype DashboardProps = { report: any };\n\nconst remap = (value: number, x1: number, y1: number, x2: number, y2: number) =>\n  ((value - x1) * (y2 - x2)) / (y1 - x1) + x2;\n\nconst scoreToGrade = (score: number) => {\n  const grades = \"A,B,C,D,E,F\".split(\",\");\n\n  const newGrade = Math.min(\n    grades.length - 1,\n    Math.floor(remap(score, 0, 1, 0, 6))\n  );\n\n  return grades[newGrade];\n};\n\nexport const Dashboard: React.FC<DashboardProps> = ({ report }) => {\n  console.log(\"report\", report);\n\n  return (\n    <div>\n      <br />\n      <Alert variant=\"info\">\n        Cliquez sur une des URLs pour obtenir le détail puis sur{\" \"}\n        <ExternalLink size={16} /> pour accéder au rapport par produit.\n      </Alert>\n      <br />\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>url</th>\n            <th className=\"text-center\">a11y</th>\n            <th className=\"text-center\">perf</th>\n            <th className=\"text-center\">SEO</th>\n            <th className=\"text-center\">SSL</th>\n            <th className=\"text-center\">HTTP</th>\n            <th className=\"text-center\">OWASP</th>\n            <th className=\"text-center\">Trackers</th>\n            <th className=\"text-center\">Cookies</th>\n            <th className=\"text-center\">Nuclei</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(report).map((key) => {\n            const a11y =\n              report[key].lhr.length &&\n              (report[key].lhr[0].result.categories.accessibility\n                .score as number);\n            const webPerf =\n              report[key].lhr.length &&\n              (report[key].lhr[0].result.categories.performance\n                .score as number);\n            const seo =\n              report[key].lhr.length &&\n              (report[key].lhr[0].result.categories.seo.score as number);\n            const ssl =\n              report[key].ssl.length &&\n              report[key].ssl[0].result.endpoints &&\n              report[key].ssl[0].result.endpoints.length &&\n              report[key].ssl[0].result.endpoints[0].grade;\n            const http =\n              report[key].http.length && report[key].http[0].result.grade;\n            const owaspAlerts =\n              (report[key].owasp.length &&\n                report[key].owasp[0].result.site[0].alerts.filter(\n                  (a: any) => a.riskcode !== \"0\"\n                )) ||\n              [];\n            const owasp = owaspAlerts.length;\n            const trackers =\n              (report[key].trackers &&\n                report[key].trackers.length &&\n                report[key].trackers[0].trackers.length) ||\n              0;\n            const trackersGrade =\n              trackers > 10\n                ? \"F\"\n                : trackers > 2\n                ? \"C\"\n                : trackers > 0\n                ? \"B\"\n                : \"A\";\n            const cookies =\n              (report[key].trackers &&\n                report[key].trackers.length &&\n                report[key].trackers[0].cookies.length) ||\n              0;\n            const cookiesGrade =\n              cookies > 10\n                ? \"F\"\n                : cookies > 5\n                ? \"E\"\n                : cookies > 2\n                ? \"C\"\n                : cookies > 0\n                ? \"B\"\n                : \"A\";\n            const nuclei = report[key].nuclei.filter(\n              (n: any) => n.info.severity !== \"info\"\n            ).length;\n            const nucleiGrade = report[key].nuclei.filter(\n              (n: any) =>\n                n.info.severity === \"critical\" || n.info.severity === \"high\"\n            ).length\n              ? \"F\"\n              : nuclei.length\n              ? \"B\"\n              : \"A\";\n            const owaspMax = Math.max(\n              ...owaspAlerts.map((o: any) => parseInt(o.riskcode) || 0)\n            );\n\n            const owaspGrade =\n              owaspMax > 3\n                ? \"F\"\n                : owaspMax > 2\n                ? \"D\"\n                : owaspMax > 1\n                ? \"C\"\n                : owaspMax > 0\n                ? \"B\"\n                : \"A\";\n            return (\n              <tr key={key}>\n                <td>\n                  <Link to={`/url/${key}`}>{smallUrl(key)}</Link>\n                </td>\n                <td className=\"text-center\">\n                  <Grade\n                    grade={scoreToGrade(1 - a11y)}\n                    label={(a11y * 100).toFixed() + \" %\"}\n                  />\n                </td>\n                <td className=\"text-center\">\n                  <Grade\n                    grade={scoreToGrade(1 - webPerf)}\n                    label={(webPerf * 100).toFixed() + \" %\"}\n                  />\n                </td>\n                <td className=\"text-center\">\n                  <Grade\n                    grade={scoreToGrade(1 - seo)}\n                    label={(seo * 100).toFixed() + \" %\"}\n                  />\n                </td>\n                <td className=\"text-center\">\n                  {ssl ? <Grade grade={ssl} /> : <Grade grade=\"F\" label=\"-\" />}\n                </td>\n                <td className=\"text-center\">\n                  {http ? (\n                    <Grade grade={http} />\n                  ) : (\n                    <Grade grade=\"F\" label=\"-\" />\n                  )}\n                </td>\n                <td className=\"text-center\">\n                  <Grade grade={owaspGrade} label={owasp} />\n                </td>\n                <td className=\"text-center\">\n                  <Grade grade={trackersGrade} label={trackers} />\n                </td>\n                <td className=\"text-center\">\n                  <Grade grade={cookiesGrade} label={cookies} />\n                </td>\n                <td className=\"text-center\">\n                  <Grade grade={nucleiGrade} label={nuclei} />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      <br />\n      <br />\n      <h3>Methodology</h3>\n      <p>\n        This dashboard is based on third-parties tools and is generated once a\n        week.\n      </p>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>tool</th>\n            <th>usage</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              <a\n                href=\"https://developers.google.com/web/tools/lighthouse\"\n                target=\"_blank\"\n              >\n                Google LightHouse\n              </a>\n            </td>\n            <td>Automated tool for improving the quality of web pages.</td>\n          </tr>\n          <tr>\n            <td>\n              <a href=\"https://www.zaproxy.org/\" target=\"_blank\">\n                ZA proxy\n              </a>\n            </td>\n            <td>\n              Run OWASP ZAP Baseline scan to find vulnerabilities in your web\n              application.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <a href=\"https://www.ssllabs.com/\" target=\"_blank\">\n                SSLLabs\n              </a>\n            </td>\n            <td>Deep analysis of SSL configuration</td>\n          </tr>\n          <tr>\n            <td>\n              <a href=\"https://observatory.mozilla.org/\" target=\"_blank\">\n                Mozilla HTTP observatory\n              </a>\n            </td>\n            <td>Mozilla's web security guidelines scan</td>\n          </tr>\n          <tr>\n            <td>Trackers</td>\n            <td>Built-in third-party trackers list</td>\n          </tr>\n          <tr>\n            <td>\n              <a href=\"https://nuclei.projectdiscovery.io/\" target=\"_blank\">\n                Nuclei\n              </a>\n            </td>\n            <td>Scan server misconfigurations</td>\n          </tr>\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n","// @ts-nocheck\nimport React, { useRef, useEffect } from \"react\";\nimport { Gauge as CanvasGauge, Donut } from \"gaugeJS/dist/gauge.min\";\n\n// copied from https://unpkg.com/react-gaugejs@1.2.1/Gauge.js due to bad transpilation\n\ntype GaugeProps = {\n  maxValue?: number;\n  minValue?: number;\n  width?: number;\n  height?: number;\n  animationSpeed?: number;\n  options?: object;\n  donut?: boolean;\n  value: number;\n  className?: string;\n};\n\n/**\n * React wrapper for GaugeJS.\n * @param {*} props\n * @return {Object} React element\n */\nexport const Gauge: React.FC<GaugeProps> = (props) => {\n  const canvas = useRef();\n  const span = useRef();\n  const gauge = useRef();\n\n  useEffect(() => {\n    gauge.current = props.donut\n      ? new Donut(canvas.current)\n      : new CanvasGauge(canvas.current);\n    gauge.current.setTextField(span.current);\n    gauge.current.setOptions(props.options);\n    gauge.current.maxValue = props.maxValue;\n    gauge.current.setMinValue(props.minValue);\n    gauge.current.animationSpeed = props.animationSpeed;\n    gauge.current.set(props.value);\n  }, [props.donut]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    gauge.current.setOptions(props.options);\n  }, [props.options]);\n\n  useEffect(() => {\n    gauge.current.maxValue = props.maxValue;\n  }, [props.maxValue]);\n\n  useEffect(() => {\n    gauge.current.setMinValue(props.minValue);\n  }, [props.minValue]);\n\n  useEffect(() => {\n    gauge.current.animationSpeed = props.animationSpeed;\n  }, [props.animationSpeed]);\n\n  useEffect(() => {\n    gauge.current.set(props.value);\n  }, [props.value]);\n\n  /* eslint-disable no-unused-vars */\n  const {\n    maxValue,\n    minValue,\n    animationSpeed,\n    options,\n    donut,\n    value,\n    textChangeHandler,\n    ...passThroughProps\n  } = props;\n  /* eslint-enable no-unused-vars */\n\n  return (\n    <>\n      <canvas\n        ref={canvas}\n        className=\"gauge-canvas\"\n        {...passThroughProps}\n      ></canvas>\n      <span ref={span} style={{ display: \"none\" }}></span>\n    </>\n  );\n};\n\nGauge.defaultProps = {\n  maxValue: 3000,\n  minValue: 0,\n  animationSpeed: 32,\n  options: {\n    // staticLabels: {\n    //   font: \"10px sans-serif\", // Specifies font\n    //   labels: [100, 130, 150, 220.1, 260, 300], // Print labels at these values\n    //   color: \"#000000\", // Optional: Label text color\n    //   fractionDigits: 0, // Optional: Numerical precision. 0=round off.\n    // },\n    percentColors: [\n      [0.0, \"#FF4E42\"],\n      [0.5, \"#ffa400\"],\n      [0.9, \"#0CCE6B\"],\n      //[0.90, \"#ffa400\"],\n      //  [0.3, \"#ff0000\"],\n      // [0.5, \"#f9c802\"],\n      [1, \"#0CCE6B\"],\n    ],\n    angle: 0.25,\n    lineWidth: 0.44,\n    radiusScale: 1,\n    pointer: {\n      length: 0.6,\n      strokeWidth: 0.035,\n      color: \"#333\",\n    },\n    //limitMax: false,\n    //limitMin: false,\n    //colorStart: \"red\",\n    //colorStop: \"pink\",\n    strokeColor: \"#FF4E42\",\n    generateGradient: true,\n    highDpiSupport: true,\n  },\n  donut: false,\n  textChangeHandler: () => {},\n};\n\nexport default Gauge;\n","import * as React from \"react\";\n\nimport { Card } from \"react-bootstrap\";\nimport { ExternalLink } from \"react-feather\";\n\ntype PanelProps = {\n  title: string;\n  children: any;\n  info?: string;\n  url?: string;\n};\n\nexport const Panel: React.FC<PanelProps> = ({ title, children, info, url }) => (\n  <Card>\n    <Card.Title style={{ background: \"#000091\", color: \"white\", padding: 10 }}>\n      {title}\n      {info && (\n        <span\n          style={{ fontWeight: \"normal\", fontSize: \"0.6em\", marginLeft: 10 }}\n        >\n          {info}\n        </span>\n      )}\n      {url && (\n        <a\n          style={{ color: \"white\", float: \"right\" }}\n          href={url}\n          target=\"_blank\"\n        >\n          <ExternalLink />\n        </a>\n      )}\n    </Card.Title>\n    <Card.Body>{children}</Card.Body>\n  </Card>\n);\n","import * as React from \"react\";\n\nimport { Row, Col, Card } from \"react-bootstrap\";\n\nimport { Gauge } from \"./Gauge\";\nimport { Panel } from \"./Panel\";\n\ntype Category = {\n  score: number;\n  [any: string]: any;\n};\n\ntype LightHouseProps = { data: any };\n\nexport const LightHouse: React.FC<LightHouseProps> = ({ data }) => {\n  const url =\n    (data.length &&\n      `/web-dashboard/report/${data[0].filename.replace(\n        /\\.json$/,\n        \".html\"\n      )}`) ||\n    null;\n\n  return (\n    url && (\n      <Panel\n        title=\"LightHouse\"\n        info=\"Informations collectées par l'outil Google LightHouse\"\n        url={url}\n      >\n        {data.map((row: any) => {\n          return (\n            <Row key={row.url}>\n              {Object.keys(row.result.categories)\n                .filter((key) => key !== \"pwa\")\n                .map((key: any, i: number) => {\n                  const category = row.result.categories[key] as Category;\n                  return (\n                    <Col\n                      key={category.title}\n                      xs={12}\n                      md={6}\n                      lg={3}\n                      className=\"text-center mb-3\"\n                    >\n                      <Card>\n                        <Gauge\n                          width={100}\n                          height={60}\n                          value={category.score * 100}\n                          minValue={0}\n                          maxValue={100}\n                          animationSpeed={32}\n                        />\n                        <Card.Body>\n                          <Card.Title>{category.title}</Card.Title>\n                          <Card.Title\n                            style={{ fontSize: \"2rem\", fontWeight: \"bold\" }}\n                          >\n                            {category.score}\n                          </Card.Title>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                  );\n                })}\n            </Row>\n          );\n        })}\n      </Panel>\n    )\n  );\n};\n","import * as React from \"react\";\n\nimport { Row, Col, Alert } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\nimport { Grade } from \"./Grade\";\n\ntype SSLProps = { data: any };\n\nexport const SSL: React.FC<SSLProps> = ({ data }) => {\n  const firstGrade =\n    data.length &&\n    data[0].result.endpoints &&\n    data[0].result.endpoints.length &&\n    data[0].result.endpoints[0].grade;\n  const url =\n    (data.length &&\n      data[0].result.endpoints &&\n      `https://www.ssllabs.com/ssltest/analyze.html?d=${data[0].url}`) ||\n    null;\n  return (\n    url && (\n      <Panel title=\"SSL\" info=\"Informations collectées via SSLlabs\" url={url}>\n        {data.map((row: any) => {\n          return (\n            <React.Fragment key={row.url}>\n              <Row>\n                <Col>\n                  {row.result.endpoints.map((endpoint: any, i: number) => {\n                    return (\n                      <div key={endpoint.host + i}>\n                        {endpoint.host}\n                        <h6>\n                          {(endpoint.statusMessage === \"Ready\" && (\n                            <div>\n                              <Grade grade={endpoint.grade} />\n                              <br />\n                              <br />\n                              {endpoint.hasWarnings && (\n                                <div>Certificate has WARNINGS</div>\n                              )}\n                              <br />\n                              IP: {endpoint.ipAddress}\n                            </div>\n                          )) || (\n                            <Alert variant=\"danger\">\n                              {endpoint.statusMessage}\n                            </Alert>\n                          )}\n                        </h6>\n                      </div>\n                    );\n                  })}\n                </Col>\n              </Row>\n            </React.Fragment>\n          );\n        })}\n      </Panel>\n    )\n  );\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\nimport { Grade } from \"./Grade\";\n\ntype HTTPProps = { data: any };\n\nconst HttpRowBadge = (row: any) => {\n  const severity = Math.abs(row.score_modifier);\n  const variant =\n    severity > 50\n      ? \"danger\"\n      : severity > 30\n      ? \"danger\"\n      : severity > 20\n      ? \"warning\"\n      : severity > 10\n      ? \"info\"\n      : \"success\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {severity}\n    </Badge>\n  );\n};\n\nexport const HTTP: React.FC<HTTPProps> = ({ data }) => {\n  const url =\n    (data.length && `https://observatory.mozilla.org/analyze/${data[0].url}`) ||\n    null;\n  return (\n    url && (\n      <Panel\n        title=\"HTTP\"\n        info=\"Informations collectées par le Mozilla HTTP observatory\"\n        url={url}\n      >\n        {data.map((row: any) => {\n          const failures = Object.keys(row.result.details)\n            .filter((key) => !row.result.details[key].pass)\n            .map((key) => row.result.details[key]);\n          failures.sort((a, b) => a.score_modifier - b.score_modifier);\n          return (\n            <div key={row.url}>\n              <Grade grade={row.result.grade} />\n              <br />\n              <br />\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>id</th>\n                    <th>impact</th>\n                    <th>description</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {failures.map((failure, i) => (\n                    <tr key={failure.name + i}>\n                      <td>{failure.name}</td>\n                      <td>\n                        <HttpRowBadge {...failure} />\n                      </td>\n                      <td>{failure.score_description}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </div>\n          );\n        })}\n      </Panel>\n    )\n  );\n};\n","import * as React from \"react\";\n\nimport { Alert, Table } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\n\ntype TrackersProps = { data: any };\n\nexport const Trackers: React.FC<TrackersProps> = ({ data }) => {\n  const rows = data;\n  //rows.sort(nucleiOrder);\n  const hasIssues =\n    data.flatMap((row: any) => [...row.cookies, ...row.trackers]).length > 0;\n  return (\n    (hasIssues && (\n      <Panel title=\"Trackers\" info=\"Scripts tiers embarqués dans la page web\">\n        {data.map((row: any, i: number) => {\n          return (\n            <div key={row.url + i}>\n              {(row.cookies && row.cookies.length && (\n                <Table striped bordered hover style={{ marginBottom: 10 }}>\n                  <thead>\n                    <tr>\n                      <th className=\"bg-dark text-white\" colSpan={4}>\n                        Cookies\n                      </th>\n                    </tr>\n                    <tr>\n                      <th>name</th>\n                      <th>domain</th>\n                      <th className=\"text-center\">httpOnly</th>\n                      <th className=\"text-center\">secure</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {row.cookies.map((cookie: any, i: number) => {\n                      return (\n                        <tr key={cookie.templateID + \"\" + i}>\n                          <td>{cookie.name}</td>\n                          <td>{cookie.domain}</td>\n                          <td className=\"text-center\">\n                            {cookie.httpOnly ? \"✔️\" : \"❌\"}\n                          </td>\n                          <td className=\"text-center\">\n                            {cookie.secure ? \"✔️\" : \"❌\"}\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              )) ||\n                null}\n              {(row.trackers && row.trackers.length && (\n                <Table striped bordered hover>\n                  <thead>\n                    <tr>\n                      <th className=\"bg-dark text-white\" colSpan={4}>\n                        Third-parties ressources\n                      </th>\n                    </tr>\n                    <tr>\n                      <th>type</th>\n                      <th>value</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {row.trackers.map((tracker: any, i: number) => {\n                      return (\n                        <tr key={tracker.value + i}>\n                          <td>{tracker.type}</td>\n                          <td>{tracker.value}</td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              )) ||\n                null}\n            </div>\n          );\n        })}\n      </Panel>\n    )) || (\n      <Panel title=\"Trackers\" info=\"Scripts tiers embarqués dans la page web\">\n        <Alert variant=\"success\">Aucun script third-party detecté</Alert>\n      </Panel>\n    )\n  );\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\n\nconst orderBySeverity = (a: any, b: any) => {\n  // high criticity first\n  const order = parseInt(b.riskcode) - parseInt(a.riskcode);\n  if (order === 0) {\n    // high confidence first\n    return parseInt(b.confidence) - parseInt(a.confidence);\n  }\n  return order;\n};\n\nconst OwaspBadge = (row: any) => {\n  const severity = row.riskcode;\n  const variant =\n    severity === \"0\"\n      ? \"info\"\n      : severity === \"1\"\n      ? \"warning\"\n      : severity === \"2\"\n      ? \"danger\"\n      : severity === \"3\"\n      ? \"danger\"\n      : \"info\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {row.riskdesc}\n    </Badge>\n  );\n};\n\ntype OwaspProps = { data: any };\n\nexport const Owasp: React.FC<OwaspProps> = ({ data }) => {\n  const alerts = data.flatMap((row: any) => {\n    return row.result && row.result.site.flatMap((site: any) => site.alerts);\n  });\n  alerts.sort(orderBySeverity);\n  const url =\n    data.length &&\n    `/web-dashboard/report/${data[0].filename.replace(/\\.json$/, \".html\")}`;\n  return (\n    (alerts.length && (\n      <Panel\n        title=\"OWASP\"\n        url={url}\n        info=\"Scan de vulnérabiliés OWASP baseline\"\n      >\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>name</th>\n              <th className=\"text-center\">count</th>\n              <th className=\"text-center\">risk/confidence</th>\n            </tr>\n          </thead>\n          <tbody>\n            {alerts.map((alert: any) => {\n              return (\n                <tr key={alert.name}>\n                  <td>{alert.name}</td>\n                  <td className=\"text-center\">{alert.count}</td>\n                  <td className=\"text-center\">\n                    <OwaspBadge {...alert} />\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Panel>\n    )) ||\n    null\n  );\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\nimport { Grade } from \"./Grade\";\n\ntype NucleiProps = { data: any };\n\nconst NucleiBadge = (row: any) => {\n  const severity = (row.info && row.info.severity) || \"critical\";\n  const variant =\n    severity === \"critical\"\n      ? \"danger\"\n      : severity === \"high\"\n      ? \"danger\"\n      : severity === \"medium\"\n      ? \"warning\"\n      : severity === \"low\"\n      ? \"info\"\n      : \"success\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {severity}\n    </Badge>\n  );\n};\n\nconst nucleiSeverities = \"info,low,medium,high,critical\".split(\",\");\n\nconst nucleiOrder = (a: any, b: any) => {\n  return (\n    nucleiSeverities.indexOf(a.info.severity) -\n    nucleiSeverities.indexOf(b.info.severity)\n  );\n};\n\nexport const Nuclei: React.FC<NucleiProps> = ({ data }) => {\n  const rows = data;\n  rows.sort(nucleiOrder);\n  return (\n    (rows.length && (\n      <Panel\n        title=\"Nuclei\"\n        info=\"Détection d'erreurs de configuration et vulnérabilités\"\n      >\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>severity</th>\n              <th>name</th>\n              <th>matcher</th>\n            </tr>\n          </thead>\n          <tbody>\n            {rows.map((failure: any, i: number) => {\n              return (\n                <tr key={failure.templateID + i}>\n                  <td>{failure.templateID}</td>\n                  <td>\n                    <NucleiBadge {...failure} />\n                  </td>\n                  <td>{failure.info.name}</td>\n                  <td>{failure.matcher_name}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Panel>\n    )) ||\n    null\n  );\n};\n","import * as React from \"react\";\n\nimport { Nav, Table, Badge } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { Home, Search } from \"react-feather\";\n\nimport { smallUrl } from \"../utils\";\n\ntype SidebarProps = {\n  urls: any[];\n};\n\nexport const Sidebar: React.FC<SidebarProps> = ({ urls }) => {\n  return (\n    <Nav className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\">\n      <div className=\"sidebar-sticky pt-3\">\n        <ul className=\"nav flex-column\">\n          <li className=\"nav-item\">\n            <NavLink\n              to=\"/\"\n              className=\"nav-link\"\n              activeClassName=\"active\"\n              exact={true}\n            >\n              <Home size={16} style={{ marginTop: -5, marginRight: 5 }} />\n              Tableau de bord\n            </NavLink>\n          </li>\n        </ul>\n\n        <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n          <span>Urls</span>\n        </h6>\n\n        <ul className=\"nav flex-column\">\n          {urls.map((url) => (\n            <li\n              className=\"nav-item\"\n              key={url}\n              style={{\n                whiteSpace: \"pre\",\n              }}\n            >\n              <NavLink\n                className=\"nav-link\"\n                to={`/url/${url}`}\n                activeClassName=\"active\"\n                exact={true}\n              >\n                <Search size={16} style={{ marginTop: -5, marginRight: 5 }} />\n                {smallUrl(url)}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </Nav>\n  );\n};\n","import * as React from \"react\";\nimport { Home, Search, Cloud, ExternalLink } from \"react-feather\";\n\nimport {\n  Alert,\n  CardDeck,\n  Badge,\n  Card,\n  Container,\n  Row,\n  Col,\n  Navbar,\n  Nav,\n  NavDropdown,\n  Form,\n  FormControl,\n  Button,\n  Table,\n} from \"react-bootstrap\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  NavLink,\n  useParams,\n} from \"react-router-dom\";\n\nimport report from \"./report.json\";\n\nimport { Dashboard } from \"./components/Dashboard\";\nimport { LightHouse } from \"./components/LightHouse\";\nimport { SSL } from \"./components/SSL\";\nimport { HTTP } from \"./components/HTTP\";\nimport { Trackers } from \"./components/Trackers\";\nimport { Owasp } from \"./components/Owasp\";\nimport { Nuclei } from \"./components/Nuclei\";\nimport { Sidebar } from \"./components/Sidebar\";\n\nconst TopBar = () => (\n  <Navbar\n    variant=\"dark\"\n    bg=\"dark\"\n    sticky=\"top\"\n    expand=\"lg\"\n    className=\"p-0 flex-md-nowrap shadow\"\n  >\n    <Link to=\"/\">\n      <div\n        className=\"px-3\"\n        style={{ height: 30, fontSize: \"1.3rem\", color: \"var(--white)\" }}\n      >\n        <Cloud size={16} style={{ marginTop: -5, marginRight: 10 }} />\n        Météo apps\n      </div>\n    </Link>\n    {/*<FormControl\n      type=\"text\"\n      placeholder=\"Search url\"\n      className=\" form-control-dark w-100\"\n    />*/}\n  </Navbar>\n);\n\ntype UrlDetailProps = {};\n\ninterface ParamTypes {\n  url: string;\n}\n\nconst UrlDetail: React.FC<UrlDetailProps> = ({ ...props }) => {\n  const { url } = useParams<ParamTypes>();\n  //@ts-expect-error\n  const urlData = report[url] as any;\n  return (\n    <div>\n      <h1 className=\"text-center\">\n        <a href={`https://${url}`} target=\"_blank\">\n          {url}\n        </a>\n      </h1>\n      <LightHouse data={urlData.lhr} />\n      <br />\n      <SSL data={urlData.ssl} />\n      <br />\n      <HTTP data={urlData.http} />\n      <br />\n      <Nuclei data={urlData.nuclei} />\n      <br />\n      <Trackers data={urlData.trackers} />\n      <br />\n      <Owasp data={urlData.owasp} />\n    </div>\n  );\n};\n\nconst App = () => {\n  const urls = Object.keys(report);\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div>\n        <TopBar />\n        <Container fluid>\n          <Row>\n            <Sidebar urls={urls} />\n            <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\">\n              <Switch>\n                <Route path=\"/url/:url*\">\n                  <UrlDetail />\n                </Route>\n                <Route path=\"/\">\n                  <Dashboard report={report} />\n                </Route>\n              </Switch>\n            </main>\n          </Row>\n        </Container>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport \"./bootstrap-theme.scss\";\nimport \"./custom.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}